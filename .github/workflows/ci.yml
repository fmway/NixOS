name: "CI"
on:
  pull_request:
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
permissions: write-all
jobs:
  generate-nixconf:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: DeterminateSystems/nix-installer-action@main
      with:
        github-token: ${{ secrets.GH_TOKEN }}
        extra-conf: |
          extra-experimental-features = nix-command flakes pipe-operators
    - uses: DeterminateSystems/magic-nix-cache-action@main
      with:
        use-flakehub: false
    - run: nix run .#gcn > nix.conf
    - uses: actions/upload-artifact@v4
      with:
        name: nix-conf
        path: nix.conf
    
  nixos:
    runs-on: ubuntu-latest
    needs: [ generate-nixconf ]
    steps:
    - uses: actions/checkout@v4
    - uses: actions/download-artifact@v4
      with:
        name: nix-conf
    - name: read nix.conf
      id: nix
      run: |
        cat nix.conf >> "$GITHUB_OUTPUT"
    - uses: DeterminateSystems/nix-installer-action@main
      with:
        github-token: ${{ secrets.GH_TOKEN }}
        extra-conf: ${{ steps.nix.outputs.contents }}
    - uses: DeterminateSystems/magic-nix-cache-action@main
      with:
        use-flakehub: false
    - name: Build
      run: nix build .#nixosConfigurations.minimal.config.system.build.toplevel --verbose
    - name: Info
      run: nix path-info -Sh ./result

  auto-merge:
    needs: [ nixos ]
    runs-on: ubuntu-latest
    if: ${{ !cancelled() }}
    steps:
    - name: Enable auto-merge
      env:
        PR_URL: ${{github.event.pull_request.html_url}}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        BRANCH: ${{ github.head_ref }}
      run: |
        if [[ "${BRANCH}" != "nixos-unstable" ]]; then
          gh pr merge --auto --merge "$PR_URL" -d
        else
          gh pr merge --auto --merge "$PR_URL"
        fi
